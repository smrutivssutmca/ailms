"""add normalized question models

Revision ID: 6aa775d9b3ef
Revises: c5b21794efae
Create Date: 2025-07-26 00:18:57.266210

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '6aa775d9b3ef'
down_revision: Union[str, Sequence[str], None] = 'c5b21794efae'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('difficulties',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('level', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_difficulties_id'), 'difficulties', ['id'], unique=False)
    op.create_index(op.f('ix_difficulties_level'), 'difficulties', ['level'], unique=True)
    op.create_table('subjects',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_subjects_id'), 'subjects', ['id'], unique=False)
    op.create_index(op.f('ix_subjects_name'), 'subjects', ['name'], unique=True)
    op.create_table('topics',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('subject_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['subject_id'], ['subjects.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_topics_id'), 'topics', ['id'], unique=False)
    op.create_index(op.f('ix_topics_name'), 'topics', ['name'], unique=True)
    op.create_table('updated_questions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('topic_id', sa.Integer(), nullable=True),
    sa.Column('subject_id', sa.Integer(), nullable=True),
    sa.Column('difficulty_id', sa.Integer(), nullable=True),
    sa.Column('explanation', sa.String(), nullable=True),
    sa.Column('question', sa.String(), nullable=True),
    sa.Column('answer', sa.String(), nullable=True),
    sa.Column('student_level', sa.String(), nullable=True),
    sa.Column('question_type', sa.String(), nullable=True),
    sa.Column('question_complexity', sa.Float(), nullable=True),
    sa.Column('prerequisites', sa.String(), nullable=True),
    sa.Column('estimated_time', sa.Float(), nullable=True),
    sa.Column('grade', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['difficulty_id'], ['difficulties.id'], ),
    sa.ForeignKeyConstraint(['subject_id'], ['subjects.id'], ),
    sa.ForeignKeyConstraint(['topic_id'], ['topics.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_updated_questions_id'), 'updated_questions', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_updated_questions_id'), table_name='updated_questions')
    op.drop_table('updated_questions')
    op.drop_index(op.f('ix_topics_name'), table_name='topics')
    op.drop_index(op.f('ix_topics_id'), table_name='topics')
    op.drop_table('topics')
    op.drop_index(op.f('ix_subjects_name'), table_name='subjects')
    op.drop_index(op.f('ix_subjects_id'), table_name='subjects')
    op.drop_table('subjects')
    op.drop_index(op.f('ix_difficulties_level'), table_name='difficulties')
    op.drop_index(op.f('ix_difficulties_id'), table_name='difficulties')
    op.drop_table('difficulties')
    # ### end Alembic commands ###
